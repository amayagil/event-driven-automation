version: "3.8"
services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    networks:
      - eda-ansible
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.3
    hostname: kafka
    ports:
      - "9092:9092"
    networks:
      - eda-ansible
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: true
    depends_on:
      - zookeeper

  alertmanager:
    image: quay.io/kubealex/eda-alertmanager
    ports: "9093:9093"
    hostname: alertmanager
    networks:
      - eda-ansible

  quarkus-client:
    image: quay.io/kubealex/eda-quarkus
    hostname: eda-quarkus
    restart: on-failure
    ports: 8080:8080
    networks:
      - eda-ansible
    depends_on:
      - kafka

  # ansible:
  #   image: quay.io/kubealex/eda-ansible
  #   hostname: eda-ansible
  #   restart: on-failure
  #   networks:
  #     - eda-ansible
  #   depends_on:
  #     - kafka
  #     - alertmanager
  #     - quarkus-client

networks:
  eda-ansible:
    name: eda-ansible

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
